{"version":3,"file":"transforms.js","sourceRoot":"","sources":["../../../src/agent/transforms.ts"],"names":[],"mappings":";;AAQA,oDAOC;AAdD,0CAA4D;AAE5D;;;;GAIG;AACH,SAAgB,oBAAoB,CAAC,UAAuB,iBAAS;IACnE,OAAO,KAAK,EAAE,OAAuB,EAAE,EAAE;QACvC,4FAA4F;QAC5F,IAAI,OAAO,CAAC,QAAQ,+BAAkB,EAAE,CAAC;YACvC,OAAO,CAAC,OAAO,CAAC,KAAK,GAAG,OAAO,EAAE,CAAC;QACpC,CAAC;IACH,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { WsAgentRequest, WsAgentRequestTransformFn } from './types';\nimport { Endpoint, Nonce, makeNonce } from '@dfinity/agent';\n\n/**\n * Create a Nonce transform, which takes a function that returns a Buffer, and adds it\n * as the nonce to every call requests.\n * @param nonceFn A function that returns a buffer. By default uses a semi-random method.\n */\nexport function makeWsNonceTransform(nonceFn: () => Nonce = makeNonce): WsAgentRequestTransformFn {\n  return async (request: WsAgentRequest) => {\n    // Nonce only needs to be inserted into the body for async calls, to prevent replay attacks.\n    if (request.endpoint === Endpoint.Call) {\n      request.message.nonce = nonceFn();\n    }\n  };\n}\n"]}