{"version":3,"file":"actor.js","sourceRoot":"","sources":["../../src/actor.ts"],"names":[],"mappings":";;;AAAA,4CAAsC;AACtC,kDAA+C;AAC/C,+BAAsE;AAItE,MAAM,mBAAmB,GAAG,KAAK,EAC/B,UAAqB,EACrB,KAAc,EACd,UAAkB,EAClB,OAAsB,EACtB,IAAe,EACA,EAAE;IACjB,MAAM,GAAG,GAAG,qBAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACvC,MAAM,GAAG,GAAG,YAAG,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAE/C,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE;QACrB,UAAU;QACV,GAAG;QACH,mBAAmB,EAAE,GAAG;KACzB,CAAC,CAAC;AACL,CAAC,CAAC;AAEF;;GAEG;AACI,MAAM,kBAAkB,GAAG,KAAK,EACrC,UAAqB,EACrB,KAAc,EACd,IAA6B,EACd,EAAE,CAAC,mBAAmB,CAAC,UAAU,EAAE,KAAK,EAAE,SAAS,EAAE,eAAS,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;AAJ5E,QAAA,kBAAkB,sBAI0D;AAEzF;;GAEG;AACI,MAAM,qBAAqB,GAAG,KAAK,EACxC,UAAqB,EACrB,KAAc,EACd,IAAgC,EACjB,EAAE,CAAC,mBAAmB,CAAC,UAAU,EAAE,KAAK,EAAE,YAAY,EAAE,kBAAY,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;AAJtF,QAAA,qBAAqB,yBAIiE","sourcesContent":["import { IDL } from \"@dfinity/candid\";\nimport { Principal } from \"@dfinity/principal\";\nimport { _WS_CANISTER_SERVICE, wsMessageIdl, wsOpenIdl } from \"./idl\";\nimport type { CanisterWsMessageArguments, CanisterWsOpenArguments } from \"./idl\";\nimport { WsAgent } from \"./agent\";\n\nconst _callCanisterMethod = async (\n  canisterId: Principal,\n  agent: WsAgent,\n  methodName: string,\n  idlFunc: IDL.FuncClass,\n  args: unknown[],\n): Promise<void> => {\n  const cid = Principal.from(canisterId);\n  const arg = IDL.encode(idlFunc.argTypes, args);\n\n  return agent.call(cid, {\n    methodName,\n    arg,\n    effectiveCanisterId: cid,\n  });\n};\n\n/**\n * Calls the ws_open method on the canister.\n */\nexport const callCanisterWsOpen = async (\n  canisterId: Principal,\n  agent: WsAgent,\n  args: CanisterWsOpenArguments,\n): Promise<void> => _callCanisterMethod(canisterId, agent, \"ws_open\", wsOpenIdl, [args]);\n\n/**\n * Calls the ws_message method on the canister.\n */\nexport const callCanisterWsMessage = async (\n  canisterId: Principal,\n  agent: WsAgent,\n  args: CanisterWsMessageArguments,\n): Promise<void> => _callCanisterMethod(canisterId, agent, \"ws_message\", wsMessageIdl, [args, []]);\n"]}